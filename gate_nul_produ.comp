declare component gate_uni_produ(t, bm, c): Out -> 

### Domains
# Toeholds:
sequence toe-sb = "<t>H"

# Branch migration domains:
sequence bm  = "<bm - c>H"
sequence ch = "C<bm - c - 1>H"

# Clamps:
sequence cbm  = "W<c-1>C"
sequence cch = "C<c-1>W"

### I/O connectors
sequence Out = ch cch toe-sb bm cbm
sequence C = ch cch

### Strands
strand out = ch cch toe-sb bm cbm
strand c = ch cch
strand trans_base = toe-sb* cch* ch*

### Structures
# Single-stranded:
structure Out = out : domain .....
structure C = c : domain ..

# Gates:
structure Trans = trans_base + c : domain .((+))

# Waste products:
structure Trans_waste = trans_base + out : domain (((+)))..

### Reactions
kinetic Out + Trans -> Trans_waste + C
